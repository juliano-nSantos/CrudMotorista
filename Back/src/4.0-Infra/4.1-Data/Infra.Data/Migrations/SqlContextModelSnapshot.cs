// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("CHAR(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("Numero")
                        .HasColumnType("CHAR(5)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("CHAR(2)");

                    b.HasKey("IdEndereco")
                        .HasName("PK_Enderecos");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Domain.Entities.Motorista", b =>
                {
                    b.Property<int>("IdMotorista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<int>("StatusMotoristaId")
                        .HasColumnType("int");

                    b.HasKey("IdMotorista")
                        .HasName("PK_Motoristas");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasDatabaseName("UQ_CPF_Motoristas");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("Nome")
                        .HasDatabaseName("idx_Nome_Motorista");

                    b.HasIndex("StatusMotoristaId");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("Domain.Entities.Permissao", b =>
                {
                    b.Property<int>("IdPermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdPermissao")
                        .HasName("PK_Permissoes");

                    b.ToTable("Permissoes");
                });

            modelBuilder.Entity("Domain.Entities.StatusMotorista", b =>
                {
                    b.Property<int>("IdStatusMotorista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<string>("DscStatusMotorista")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.HasKey("IdStatusMotorista")
                        .HasName("PK_StatusMotoristas");

                    b.ToTable("StatusMotoristas");
                });

            modelBuilder.Entity("Domain.Entities.StatusUsuario", b =>
                {
                    b.Property<int>("IdStatusUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<string>("DscStatusUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdStatusUsuario")
                        .HasName("PK_StatusUsuarios");

                    b.ToTable("StatusUsuarios");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<bool>("PrimeiroAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<int>("StatusUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario")
                        .HasName("PK_Usuarios");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasDatabaseName("UQ_CPF_Usuarios");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UQ_Email_Usuarios");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("StatusUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Motorista", b =>
                {
                    b.HasOne("Domain.Entities.Endereco", "Enderecos")
                        .WithMany("Motoristas")
                        .HasForeignKey("EnderecoId")
                        .HasConstraintName("FK_Motoristas_Enderecos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.StatusMotorista", "StatusMotoristas")
                        .WithMany("Motoristas")
                        .HasForeignKey("StatusMotoristaId")
                        .HasConstraintName("FK_Motoristas_StatusMotoristas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enderecos");

                    b.Navigation("StatusMotoristas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Domain.Entities.Endereco", "Enderecos")
                        .WithMany("Usuarios")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Permissao", "Permissoes")
                        .WithMany("Usuarios")
                        .HasForeignKey("PermissaoId")
                        .HasConstraintName("FK_Usuarios_Permissoe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.StatusUsuario", "StatusUsuarios")
                        .WithMany("Usuarios")
                        .HasForeignKey("StatusUsuarioId")
                        .HasConstraintName("FK_Usuarios_StatusUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enderecos");

                    b.Navigation("Permissoes");

                    b.Navigation("StatusUsuarios");
                });

            modelBuilder.Entity("Domain.Entities.Endereco", b =>
                {
                    b.Navigation("Motoristas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Permissao", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.StatusMotorista", b =>
                {
                    b.Navigation("Motoristas");
                });

            modelBuilder.Entity("Domain.Entities.StatusUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
